// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Header /> It should render the Header Component 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <styled.div
    background="/someurl"
>
    <styled.div>
        <styled.div
            w="topLeft"
        >
            <styled.span>
                First Text
            </styled.span>
            <styled.span>
                Second Text
            </styled.span>
            <styled.span>
                Sub text
            </styled.span>
            <styled.div>
                <styled.button>
                    Button
                </styled.button>
            </styled.div>
        </styled.div>
    </styled.div>
</styled.div>,
  "nodes": Array [
    <styled.div
      background="/someurl"
>
      <styled.div>
            <styled.div
                  w="topLeft"
            >
                  <styled.span>
                        First Text
                  </styled.span>
                  <styled.span>
                        Second Text
                  </styled.span>
                  <styled.span>
                        Sub text
                  </styled.span>
                  <styled.div>
                        <styled.button>
                              Button
                        </styled.button>
                  </styled.div>
            </styled.div>
      </styled.div>
</styled.div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Header
        background="/someurl"
        headerText={
                Object {
                        "button": "Button",
                        "firstText": "First Text",
                        "secondText": "Second Text",
                        "subText": "Sub text",
                      }
        }
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "background": "/someurl",
          "headerText": Object {
            "button": "Button",
            "firstText": "First Text",
            "secondText": "Second Text",
            "subText": "Sub text",
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <styled.div
          background="/someurl"
>
          <styled.div>
                    <styled.div
                              w="topLeft"
                    >
                              <styled.span>
                                        First Text
                              </styled.span>
                              <styled.span>
                                        Second Text
                              </styled.span>
                              <styled.span>
                                        Sub text
                              </styled.span>
                              <styled.div>
                                        <styled.button>
                                                  Button
                                        </styled.button>
                              </styled.div>
                    </styled.div>
          </styled.div>
</styled.div>,
        "_debugID": 2,
        "_renderedOutput": <styled.div
          background="/someurl"
>
          <styled.div>
                    <styled.div
                              w="topLeft"
                    >
                              <styled.span>
                                        First Text
                              </styled.span>
                              <styled.span>
                                        Second Text
                              </styled.span>
                              <styled.span>
                                        Sub text
                              </styled.span>
                              <styled.div>
                                        <styled.button>
                                                  Button
                                        </styled.button>
                              </styled.div>
                    </styled.div>
          </styled.div>
</styled.div>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Header
    background="/someurl"
    headerText={
        Object {
            "button": "Button",
            "firstText": "First Text",
            "secondText": "Second Text",
            "subText": "Sub text",
          }
    }
/>,
}
`;
